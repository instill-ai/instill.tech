import { FC, ReactElement, ReactNode } from "react";
import * as classNames from "classnames";

export interface InstillAiLogoProps {
  styleName?: string;
  type:
    | "responsiveWhite"
    | "logoOnlyWhite"
    | "fullWhite"
    | "logoOnlyblue"
    | "fullBlack";
  width: number;
}

export const InstillAiLogo: FC<InstillAiLogoProps> = ({
  styleName,
  type,
  width,
}) => {
  let logo: ReactNode;

  const getWhiteCombinationLogo = (
    width: number,
    styleName?: string
  ): ReactElement => {
    return (
      <svg
        viewBox="0 0 400 88"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={styleName}
        style={{ width: `${width}px` }}
      >
        <path
          d="M77.4185 0H0V87.9804H83.8535V0H77.4185ZM6.44997 6.76741H12.9037V27.0736H6.44997V6.76741ZM6.44997 33.8449H12.9037V54.0765H6.44997V33.8449ZM25.8074 81.2287H6.44997V60.8478H12.9037V60.9225H19.3537V60.8478H25.8074V81.2287ZM25.8074 54.0765H19.3537V33.8449H25.8074V54.0765ZM25.8074 27.0736H19.3537V6.76741H25.7625V13.5898H25.8074V27.0736ZM32.2574 33.8449H38.7111V54.0765H32.2574V33.8449ZM32.2574 60.8478H38.7111V67.5249H32.2574V60.8478ZM51.5362 74.4691H38.786V67.6506H45.1499V60.8478H51.5138L51.5362 74.4691ZM51.5362 54.0883H45.1723V33.8449H51.5362V54.0883ZM51.5362 20.2708H45.1723V27.0854H32.2574V13.5898H38.6699V20.2669H45.1237V13.4681H38.7074V6.76741H51.5362V20.2708ZM64.4998 81.2287H57.9899V60.8478H64.4998V81.2287ZM77.4035 81.2287H70.9685V60.8478H77.4185L77.4035 81.2287ZM77.4035 54.0765H57.975V33.8449H77.4035V54.0765ZM77.4035 27.0736H57.975V20.3062H77.4035V27.0736ZM77.4035 13.5388H57.975V6.76741H77.4035V13.5388Z"
          fill="#F7F7F7"
        />
        <path
          d="M348.385 54.1514H341.936V60.9188H348.385V54.1514Z"
          fill="#F7F7F7"
        />
        <path
          d="M374.012 27.0929V27.0771H361.288V33.8446H367.742V47.3833H354.838V40.6159H361.288V33.8446H354.838V40.6159H348.385V54.1508H351.245H354.838H367.742V60.9221H374.192V27.0929H374.012Z"
          fill="#F7F7F7"
        />
        <path
          d="M400 33.8446V27.0771H380.643V33.8446H387.096V54.1508H380.643V60.9221H400V54.1508H393.546V33.8446H400Z"
          fill="#F7F7F7"
        />
        <path
          d="M187.098 40.6159V33.8446H206.452V27.0771H187.098H180.645V47.3833H187.098H206.452V54.1507H212.902V40.6159H206.452H187.098Z"
          fill="#F7F7F7"
        />
        <path
          d="M206.291 54.1514H180.645V60.9188H206.291V54.1514Z"
          fill="#F7F7F7"
        />
        <path
          d="M116.13 33.8446H122.58V54.1508H116.13V60.9221H135.484V54.1508H129.034V33.8446H135.484V27.0771H116.13V33.8446Z"
          fill="#F7F7F7"
        />
        <path
          d="M212.901 33.8446H225.805V60.9221H232.255V33.8446H245.312V27.0771H212.901V33.8446Z"
          fill="#F7F7F7"
        />
        <path
          d="M251.688 33.8446H258.1V54.1508H251.688V60.9221H270.966V54.1508H264.554V33.8446H270.966V27.0771H251.688V33.8446Z"
          fill="#F7F7F7"
        />
        <path
          d="M283.87 27.0771H277.42V54.1508V60.7571V60.9221H296.774V54.1508H283.87V27.0771Z"
          fill="#F7F7F7"
        />
        <path
          d="M309.677 27.0771H303.224V54.1508V60.7571V60.9221H322.581V54.1508H309.677V27.0771Z"
          fill="#F7F7F7"
        />
        <path
          d="M148.387 33.8446V27.0771H141.934V33.8446V40.6159V60.9221H148.387V40.6159H154.837V33.8446H148.387Z"
          fill="#F7F7F7"
        />
        <path
          d="M161.287 40.6162H154.837V47.3836H161.287V40.6162Z"
          fill="#F7F7F7"
        />
        <path
          d="M167.741 47.3833H161.291V54.1508H167.741V60.9221H174.195V54.1508V47.3833V27.0771H167.741V47.3833Z"
          fill="#F7F7F7"
        />
      </svg>
    );
  };

  const getBlackCombinationLogo = (
    width: number,
    styleName?: string
  ): ReactElement => {
    return (
      <svg
        viewBox="0 0 195 42"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={styleName}
        style={{ width: `${width}px` }}
      >
        <g clipPath="url(#clip0_2_8133)">
          <path
            d="M38.048 0H0.5V41.9906H41.1689V0H38.048ZM3.62824 3.2299H6.75829V12.9215H3.62824V3.2299ZM3.62824 16.1533H6.75829V25.8092H3.62824V16.1533ZM13.0166 38.7682H3.62824V29.041H6.75829V29.0766H9.88654V29.041H13.0166V38.7682ZM13.0166 25.8092H9.88654V16.1533H13.0166V25.8092ZM13.0166 12.9215H9.88654V3.2299H12.9948V6.48605H13.0166V12.9215ZM16.1448 16.1533H19.2749V25.8092H16.1448V16.1533ZM16.1448 29.041H19.2749V32.2278H16.1448V29.041ZM25.4951 35.5421H19.3112V32.2878H22.3977V29.041H25.4842L25.4951 35.5421ZM25.4951 25.8149H22.4086V16.1533H25.4951V25.8149ZM25.4951 9.67471H22.4086V12.9271H16.1448V6.48605H19.2549V9.67284H22.385V6.42794H19.2731V3.2299H25.4951V9.67471ZM31.7824 38.7682H28.6251V29.041H31.7824V38.7682ZM38.0407 38.7682H34.9197V29.041H38.048L38.0407 38.7682ZM38.0407 25.8092H28.6179V16.1533H38.0407V25.8092ZM38.0407 12.9215H28.6179V9.69158H38.0407V12.9215ZM38.0407 6.46168H28.6179V3.2299H38.0407V6.46168Z"
            fill="#1A1A1A"
          />
          <path
            d="M169.467 25.8447H166.339V29.0746H169.467V25.8447Z"
            fill="#1A1A1A"
          />
          <path
            d="M181.896 12.9313V12.9238H175.725V16.1537H178.855V22.6154H172.597V19.3855H175.725V16.1537H172.597V19.3855H169.467V25.8453H170.854H172.597H178.855V29.0771H181.983V12.9313H181.896Z"
            fill="#1A1A1A"
          />
          <path
            d="M194.5 16.1537V12.9238H185.111V16.1537H188.241V25.8453H185.111V29.0771H194.5V25.8453H191.37V16.1537H194.5Z"
            fill="#1A1A1A"
          />
          <path
            d="M91.2424 19.3855V16.1537H100.629V12.9238H91.2424H88.1123V22.6154H91.2424H100.629V25.8453H103.757V19.3855H100.629H91.2424Z"
            fill="#1A1A1A"
          />
          <path
            d="M100.551 25.8447H88.1123V29.0746H100.551V25.8447Z"
            fill="#1A1A1A"
          />
          <path
            d="M56.8232 16.1537H59.9515V25.8453H56.8232V29.0771H66.2098V25.8453H63.0816V16.1537H66.2098V12.9238H56.8232V16.1537Z"
            fill="#1A1A1A"
          />
          <path
            d="M103.758 16.1537H110.016V29.0771H113.144V16.1537H119.477V12.9238H103.758V16.1537Z"
            fill="#1A1A1A"
          />
          <path
            d="M122.568 16.1537H125.678V25.8453H122.568V29.0771H131.919V25.8453H128.808V16.1537H131.919V12.9238H122.568V16.1537Z"
            fill="#1A1A1A"
          />
          <path
            d="M138.177 12.9238H135.049V25.8453V28.9984V29.0771H144.435V25.8453H138.177V12.9238Z"
            fill="#1A1A1A"
          />
          <path
            d="M150.694 12.9238H147.563V25.8453V28.9984V29.0771H156.952V25.8453H150.694V12.9238Z"
            fill="#1A1A1A"
          />
          <path
            d="M72.468 16.1537V12.9238H69.3379V16.1537V19.3855V29.0771H72.468V19.3855H75.5962V16.1537H72.468Z"
            fill="#1A1A1A"
          />
          <path
            d="M78.724 19.3848H75.5957V22.6147H78.724V19.3848Z"
            fill="#1A1A1A"
          />
          <path
            d="M81.8538 22.6154H78.7256V25.8453H81.8538V29.0771H84.9839V25.8453V22.6154V12.9238H81.8538V22.6154Z"
            fill="#1A1A1A"
          />
        </g>
        <defs>
          <clipPath id="clip0_2_8133">
            <rect
              width="194"
              height="42"
              fill="white"
              transform="translate(0.5)"
            />
          </clipPath>
        </defs>
      </svg>
    );
  };

  const getWhiteLogomark = (
    width: number,
    styleName?: string
  ): ReactElement => {
    return (
      <svg
        viewBox="0 0 33 33"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={{ width: `${width}px` }}
        className={styleName}
      >
        <path
          d="M30.4675 0H0V33H33V0H30.4675ZM2.53835 2.53835H5.07817V10.1549H2.53835V2.53835ZM2.53835 12.6947H5.07817V20.2832H2.53835V12.6947ZM10.1563 30.4675H2.53835V22.823H5.07817V22.851H7.61652V22.823H10.1563V30.4675ZM10.1563 20.2832H7.61652V12.6947H10.1563V20.2832ZM10.1563 10.1549H7.61652V2.53835H10.1387V5.09732H10.1563V10.1549ZM12.6947 12.6947H15.2345V20.2832H12.6947V12.6947ZM12.6947 22.823H15.2345V25.3275H12.6947V22.823ZM20.2817 27.9321H15.264V25.3746H17.7684V22.823H20.2729L20.2817 27.9321ZM20.2817 20.2876H17.7773V12.6947H20.2817V20.2876ZM20.2817 7.60326H17.7773V10.1593H12.6947V5.09732H15.2183V7.60178H17.7581V5.05165H15.233V2.53835H20.2817V7.60326ZM25.3835 30.4675H22.8216V22.823H25.3835V30.4675ZM30.4616 30.4675H27.9292V22.823H30.4675L30.4616 30.4675ZM30.4616 20.2832H22.8157V12.6947H30.4616V20.2832ZM30.4616 10.1549H22.8157V7.61651H30.4616V10.1549ZM30.4616 5.07817H22.8157V2.53835H30.4616V5.07817Z"
          fill="#F7F7F7"
        />
      </svg>
    );
  };

  const getBlueLogomark = (width: number, styleName?: string): ReactElement => {
    return (
      <svg
        viewBox="0 0 29 29"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={{ width: `${width}px` }}
        className={styleName}
      >
        <g clipPath="url(#clip0_2_3148)">
          <path
            d="M29 26.769V28.999H0V0H29V26.769ZM26.769 26.769V20.0525H24.538V26.769H26.769ZM26.769 17.8215V11.154H20.0505V17.8215H26.769ZM26.769 8.923V6.69199H20.0505V8.923H26.769ZM26.769 4.46099V2.231H20.0505V4.46099H26.769ZM22.307 26.769V20.0525H20.0505V26.769H22.307ZM17.8185 24.538V20.0495H15.6129V22.2937H13.4105V24.538H17.8185ZM17.8185 17.8215V11.154H15.6129V17.8215H17.8185ZM17.8185 6.67771V2.231H13.3819V4.43855L13.3687 4.47731H11.156V8.923H15.617V6.67873L17.8185 6.67771ZM13.3819 22.258V20.0525H11.156V22.258H13.3819ZM13.3819 17.8215V11.154H11.156V17.8215H13.3819ZM8.92095 26.769V20.0525H2.22896V26.769H8.92095ZM8.92095 17.8215V11.154H6.68995V17.8215H8.92095ZM8.92095 8.923V4.47731H8.91178V2.23304H6.69608V8.92504L8.92095 8.923ZM4.45997 17.8215V11.154H2.22896V17.8215H4.45997ZM4.45997 8.923V2.231H2.22896V8.923H4.45997Z"
            fill="black"
          />
          <path
            d="M26.7691 20.0532H24.5381V26.7697H26.7691V20.0532Z"
            fill="#38B8FF"
          />
          <path
            d="M26.7688 11.1538H20.0503V17.8213H26.7688V11.1538Z"
            fill="#24ABFF"
          />
          <path
            d="M26.7688 6.69189H20.0503V8.9229H26.7688V6.69189Z"
            fill="#005DFF"
          />
          <path
            d="M26.7688 2.23145H20.0503V4.46245H26.7688V2.23145Z"
            fill="#26A6FF"
          />
          <path
            d="M22.3068 20.0532H20.0503V26.7697H22.3068V20.0532Z"
            fill="#005EFF"
          />
          <path
            d="M17.8206 20.0532V24.5387H13.4106V22.2954H15.6151V20.0532H17.8206Z"
            fill="#2982FF"
          />
          <path
            d="M17.8197 11.1538H15.6152V17.8213H17.8197V11.1538Z"
            fill="#0033FF"
          />
          <path
            d="M17.8208 2.23145V6.67815H15.6153H15.602V4.43899H13.3843V2.23145H17.8208Z"
            fill="#0009FF"
          />
          <path
            d="M15.6148 6.67794V8.92323H11.1538V4.47754H13.3705V6.67794H15.6015H15.6148Z"
            fill="#24ABFF"
          />
          <path
            d="M15.6016 4.43848V6.67764H13.3706V4.47724L13.3839 4.43848H15.6016Z"
            fill="black"
          />
          <path
            d="M13.3848 20.0532H11.1538V22.2587H13.3848V20.0532Z"
            fill="#006CFF"
          />
          <path
            d="M13.3848 11.1538H11.1538V17.8213H13.3848V11.1538Z"
            fill="#38B8FF"
          />
          <path
            d="M6.69195 20.0532H8.92295V26.7697H2.23096V20.0532H4.46094H6.69195Z"
            fill="#006CFF"
          />
          <path
            d="M8.9229 11.1538H6.69189V17.8213H8.9229V11.1538Z"
            fill="#0033FF"
          />
          <path
            d="M8.9229 4.47775V8.92344H6.69189V2.23145H8.9076V4.47775H8.9229Z"
            fill="#26A6FF"
          />
          <path
            d="M4.46196 11.1538H2.23096V17.8213H4.46196V11.1538Z"
            fill="#005EFF"
          />
          <path
            d="M4.46196 2.23145H2.23096V8.92344H4.46196V2.23145Z"
            fill="#005DFF"
          />
        </g>
        <defs>
          <clipPath id="clip0_2_3148">
            <rect width="29" height="29" fill="white" />
          </clipPath>
        </defs>
      </svg>
    );
  };

  switch (type) {
    case "responsiveWhite": {
      logo = (
        <div className="flex flex-col">
          {getWhiteLogomark(width / 5, "block md:hidden")}
          {getWhiteCombinationLogo(width, "hidden md:block")}
        </div>
      );
      break;
    }
    case "logoOnlyWhite": {
      logo = <>{getWhiteLogomark(width)}</>;
      break;
    }
    case "fullWhite": {
      logo = <>{getWhiteCombinationLogo(width)}</>;
      break;
    }
    case "logoOnlyblue": {
      logo = <>{getBlueLogomark(width)}</>;
      break;
    }
    case "fullBlack": {
      logo = <>{getBlackCombinationLogo(width)}</>;
      break;
    }
  }

  return <div className={classNames.default("my-auto", styleName)}>{logo}</div>;
};
