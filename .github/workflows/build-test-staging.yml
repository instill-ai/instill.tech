name: cd-build-test-staging

on:
  pull_request:
    branches:
      - "main"

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: rm -rf node_modules && pnpm i --frozen-lockfile

      - name: Lint
        run: pnpm run lint

      - name: Test
        run: pnpm run test

  deploy-to-staging:
    if: ${{ !contains(github.ref, 'release') }}
    runs-on: ubuntu-latest
    needs: [build-test-lint]
    steps:
      - name: Activate deployment status
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: preview

      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy to staging
        id: deploy-to-vercel-staging
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCELTOKEN }}
          github-token: ${{ secrets.BOTTOKEN }}
          vercel-org-id: ${{ secrets.VERCELORGID }}
          vercel-project-id: ${{ secrets.INSTILLTECHVERCELPROJECTID }}
          scope: ${{ secrets.VERCELORGID }}
          github-comment: false
          alias-domains: |
            www.instill-inc.tech

      - name: Update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

  deploy-to-storybook:
    if: ${{ !contains(github.ref, 'release') }}
    runs-on: ubuntu-latest
    needs: [build-test-lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: preview

      - name: Deploy storybook to vercel
        id: deploy-storybook-to-vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCELTOKEN }}
          github-token: ${{ secrets.BOTTOKEN }}
          vercel-org-id: ${{ secrets.VERCELORGID }}
          vercel-project-id: ${{ secrets.INSTILLTECHSTORYBOOKVERCELPROJECTID }}
          scope: ${{ secrets.VERCELORGID }}
          vercel-args: "--prod"
          github-comment: true

      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
