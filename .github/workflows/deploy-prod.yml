name: Deploy to Production

on:
  release:
    types: [published]

jobs:
  deploy-prod:
    # skipping if the event is triggered by prerelease
    if: "!github.event.release.prerelease"

    runs-on: ubuntu-latest

    steps:
      - name: Import Vault secrets
        id: vault
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.instill.tech
          method: approle
          roleId: ${{ secrets.vaultAppRoleRoleId }}
          secretId: ${{ secrets.vaultAppRoleSecretId }}
          tlsSkipVerify: false
          extraHeaders: |
            CF-Access-Client-Id: ${{ secrets.cfAccessClientId }}
            CF-Access-Client-Secret: ${{ secrets.cfAccessClientSecret }}
          # A magic json output trick: https://github.com/hashicorp/vault-action/issues/153#issuecomment-824329289
          secrets: |
            secret/data/devops/vercel/github-action instill-tech-project-id | INSTILL_TECH_ID;
            secret/data/devops/vercel/github-action vercel-token | VERCEL_TOKEN;
            secret/data/devops/vercel/github-action vercel-org-id | VERCEL_ORG_ID;

      - id: latestRelease
        uses: thebritican/fetch-latest-release@v1.0.3
        with:
          github_token: ${{ secrets.BOTGITHUBTOKEN }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.latestRelease.outputs.tag_name }}

      - name: deploy-to-vercel-prod
        id: deployToVercelProd
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ steps.vault.outputs.VERCEL_TOKEN }}
          github-token: ${{ secrets.BOTGITHUBTOKEN }}
          vercel-args: "--prod"
          vercel-org-id: ${{ steps.vault.outputs.VERCEL_TOKEN }}
          vercel-project-id: ${{ steps.vault.outputs.INSTILL_TECH_ID }}
          scope: ${{ steps.secrets.outputs.VERCEL_ORG_ID }}

      - name: Create temporary folder for artifacts
        run: mkdir -p ${{ github.workspace }}/tmp/artifacts

      - name: examine-lighthouse
        id: lighthouseCheck
        uses: foo-software/lighthouse-check-action@master
        with:
          accessToken: ${{ secrets.BOTGITHUBTOKEN }}
          author: ${{ github.actor }}
          branch: ${{ github.ref }}
          prCommentEnabled: true
          outputDirectory: ${{ github.workspace }}/tmp/artifacts
          emulatedFormFactor: "all"
          urls: ${{ steps.deployToVercelProd.outputs.preview-url }}
          sha: ${{ github.sha }}

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: Lighthouse reports
          path: ${{ github.workspace }}/tmp/artifacts

      - name: Handle Lighthouse Check results
        uses: foo-software/lighthouse-check-status-action@master
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: "80"
          minBestPracticesScore: "50"
          minPerformanceScore: "50"
          minProgressiveWebAppScore: "10"
          minSeoScore: "50"
