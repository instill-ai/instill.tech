name: ci-check-main-lighthouse-score

on:
  pull_request:
    branches:
      - 'main'

jobs:
  check-main-lighthouse-score:
    runs-on: ubuntu-latest
    
    steps:
      - name: Import Vault secrets
        id: secrets
        uses: hashicorp/vault-action@v2.1.0
        with:
          url: https://vault.instill.tech
          method: approle
          roleId: ${{ secrets.vaultAppRoleRoleId }}
          secretId: ${{ secrets.vaultAppRoleSecretId }}
          tlsSkipVerify: false
          extraHeaders: |
            CF-Access-Client-Id: ${{ secrets.cfAccessClientId }}
            CF-Access-Client-Secret: ${{ secrets.cfAccessClientSecret }}
          secrets: |
            secret/data/devops/slack/github-action/lighthouse-check webhook-url | LIGHTHOUSE_SLACK_WEBHOOK_URL ;
            secret/data/devops/vercel/github-action product-website-id | PRODUCT_WEBSITE_ID ;
            secret/data/devops/vercel/github-action vercel-org-id | VERCEL_ORG_ID ;
            secret/data/devops/vercel/github-action vercel-token | VERCEL_TOKEN ;
            secret/data/devops/github/drop@instill.tech/github-action personal-access-token | GITHUB_TOKEN ;

      - name: Checkout
        uses: actions/checkout@main

      - name: deploy main to vercel
        id: deployMainToVercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ steps.secrets.outputs.VERCEL_TOKEN }}
          github-token: ${{ steps.secrets.outputs.GITHUB_TOKEN }}
          vercel-org-id: ${{ steps.secrets.outputs.VERCEL_ORG_ID }}
          vercel-project-id: ${{ steps.secrets.outputs.PRODUCT_WEBSITE_ID}}
          scope: ${{ steps.secrets.outputs.VERCEL_ORG_ID }}
          github-comment: false

      - name: Create temporary folder for artifacts
        run: mkdir /tmp/artifacts
      
      - name: examine-lighthouse
        id: lighthouseCheck
        uses: foo-software/lighthouse-check-action@master
        with:
          accessToken: ${{ steps.secrets.outputs.GITHUB_TOKEN }}
          author: ${{ github.actor }}
          branch: ${{ github.ref }}
          prCommentEnabled: true
          outputDirectory: /tmp/artifacts
          emulatedFormFactor: 'all'
          urls: ${{ steps.deployMainToVercel.outputs.preview-url }}
          sha: ${{ github.sha }}
          slackWebhookUrl: ${{ steps.secrets.outputs.LIGHTHOUSE_SLACK_WEBHOOK_URL }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: Lighthouse reports
          path: /tmp/artifacts

      - name: Handle Lighthouse Check results
        uses: foo-software/lighthouse-check-status-action@master
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: '80'
          minBestPracticesScore: '50'
          minPerformanceScore: '50'
          minProgressiveWebAppScore: '10'
          minSeoScore: '50'
      